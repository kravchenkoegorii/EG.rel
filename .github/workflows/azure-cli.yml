name: Azure CLI deployment to master

on:
  push:
    branches: [ master ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch resources
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Set up .NET 6 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          chmod a+rwx ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Transform appsettings.json
        uses: microsoft/variable-substitution@v1
        with:
          files: 'EG.rel/Eg.rel.AuthService/appsettings.json'
        env:
          Config.ConnectionString: ${{ secrets.DATABASE_URL }}
          Config.JwtSignGuid: ${{ secrets.JWT_SIGN_KEY }}

      - name: Build with dotnet
        run: dotnet build "EG.rel/Eg.rel.AuthService/Eg.rel.AuthService.csproj" --configuration Release

      - name: Analyze project
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"kravchenkoegorii_EG.rel" /o:"eg-rel" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build "EG.rel/Eg.rel.AuthService/Eg.rel.AuthService.csproj" -c Release
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Publish with dotnet
        run: dotnet publish "EG.rel/Eg.rel.AuthService/Eg.rel.AuthService.csproj" -c Release -o src/Eg.rel

      - name: Create zip archive
        shell: bash
        run: |
          cd src/Eg.rel
          zip -r eg-rel-auth-artifact.zip .
          ls -l
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SP_CREDENTIALS }}

      - name: Azure CLI deployment
        uses: azure/CLI@v1
        with:
          azcliversion: 2.43.0
          inlineScript: |
            ls -l
            cd src/Eg.rel
            az webapp deployment source config-zip --resource-group "eg-rel-rg" --src "eg-rel-auth-artifact.zip" --name "eg-rel-authservice"
